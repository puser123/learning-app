type Query {
    getTodo(todoId: String!) : TODOCard
    getTodoByUser(userId: String!): TODOCard
}

type Mutation {
    createTodo(createTodoInput: CreateTodoInput): TODOCard
    updateTodo(updateTodoInput: UpdateTodoInput): TODOCard
}

input CreateTodoInput {
    title: String!
    description: String!
    scheduledStartDate: DateTime
    scheduledEndDate: DateTime
}

input UpdateTodoInput {
    todoId: String!
    description: String
    status: Status
    scheduledStartDate: DateTime
    scheduledEndDate: DateTime
}

enum Status {
    NOT_STARTED
    WORKING
    DONE
    STUCK
    WONT_DO
}


type User @key(fields: "userId") @extends {
    userId: String!
    userName: String!
    todos: [TODOCard]
}

type TODOCard @key(fields: "id") @extends{
    id: String!
    userId: String!
    title: String!
    description: String!
    createdDate: DateTime
    updateDate: DateTime
    scheduledStartDate: DateTime
    scheduledEndDate: DateTime
    status: Status
}

scalar DateTime